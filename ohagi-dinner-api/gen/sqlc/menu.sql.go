// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: menu.sql

package sqlc

import (
	"context"
	"time"
)

const listMenu = `-- name: ListMenu :many
SELECT
  dinner.id,
  dinner.created_at,
  food.name,
  dinner_menu.quantity,
  food.unit
FROM dinner as dinner
INNER JOIN dinner_menu ON dinner.id = dinner_menu.dinner_id
INNER JOIN food ON dinner_menu.food_id = food.id
`

type ListMenuRow struct {
	ID        int64
	CreatedAt time.Time
	Name      string
	Quantity  float64
	Unit      string
}

func (q *Queries) ListMenu(ctx context.Context) ([]ListMenuRow, error) {
	rows, err := q.db.QueryContext(ctx, listMenu)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListMenuRow
	for rows.Next() {
		var i ListMenuRow
		if err := rows.Scan(
			&i.ID,
			&i.CreatedAt,
			&i.Name,
			&i.Quantity,
			&i.Unit,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
